{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adash\\\\Desktop\\\\Asp_Practice\\\\NodeJS_Practice\\\\ReactPractice\\\\Basic_YouTube_Clone\\\\youtube-clone\\\\src\\\\components\\\\VideoItem.js\";\nimport React from \"react\"; //Paper creates a paper like view with few efects we make it like 3D view\n\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoItem = props => {\n  //video: is the video which we get through Map in Video list \n  //onVideoSelect: is the video event attr which we create in App.js pass to=> VidelList=> VideoItem\n  const {\n    video,\n    onVideoSelect\n  } = props; //video: is the video whic we get through Map in Video list \n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer'\n      },\n      onClick: () => onVideoSelect(video),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          marginRight: '20px'\n        },\n        alt: \"thumbnail\",\n        src: video.snippet.thumbnails.medium.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = VideoItem;\nexport default VideoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoItem\");","map":{"version":3,"sources":["C:/Users/adash/Desktop/Asp_Practice/NodeJS_Practice/ReactPractice/Basic_YouTube_Clone/youtube-clone/src/components/VideoItem.js"],"names":["React","Grid","Paper","Typography","VideoItem","props","video","onVideoSelect","display","alignItems","cursor","marginRight","snippet","thumbnails","medium","url","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAOC,IAAP,EAAaC,KAAb,EAAoBC,UAApB,QAAqC,mBAArC;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB;AACA;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAA0BF,KAAhC,CAHyB,CAGc;;AACvC,sBACI,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAG;AAACG,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,UAAU,EAAE,QAA7B;AAAuCC,QAAAA,MAAM,EAAC;AAA9C,OAAf;AAAyE,MAAA,OAAO,EAAE,MAAKH,aAAa,CAACD,KAAD,CAApG;AAAA,8BACI;AAAK,QAAA,KAAK,EAAE;AAACK,UAAAA,WAAW,EAAC;AAAb,SAAZ;AAAkC,QAAA,GAAG,EAAC,WAAtC;AAAkD,QAAA,GAAG,EAAEL,KAAK,CAACM,OAAN,CAAcC,UAAd,CAAyBC,MAAzB,CAAgCC;AAAvF;AAAA;AAAA;AAAA;AAAA,cADJ,oBAEI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAA,+BAAgC;AAAA,oBAAIT,KAAK,CAACM,OAAN,CAAcI;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAZD;;KAAMZ,S;AAcN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\n//Paper creates a paper like view with few efects we make it like 3D view\r\nimport{Grid, Paper, Typography} from \"@material-ui/core\";\r\n\r\nconst VideoItem = (props) => {\r\n    //video: is the video which we get through Map in Video list \r\n    //onVideoSelect: is the video event attr which we create in App.js pass to=> VidelList=> VideoItem\r\n    const {video, onVideoSelect } = props; //video: is the video whic we get through Map in Video list \r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper style ={{display:'flex', alignItems: 'center', cursor:'pointer'}} onClick={()=> onVideoSelect(video)}>\r\n                <img style={{marginRight:'20px'}} alt='thumbnail' src={video.snippet.thumbnails.medium.url}/> {/*url used is the rl of image used for video */}\r\n                <Typography variant='subtitle1'><b>{video.snippet.title}</b></Typography>\r\n            </Paper>\r\n        </Grid>\r\n    )    \r\n}\r\n\r\nexport default VideoItem;\r\n"]},"metadata":{},"sourceType":"module"}