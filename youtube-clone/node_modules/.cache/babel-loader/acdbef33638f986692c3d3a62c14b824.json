{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adash\\\\Desktop\\\\Asp_Practice\\\\NodeJS_Practice\\\\ReactPractice\\\\Basic_YouTube_Clone\\\\youtube-clone\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Grid } from '@material-ui/core'; //  import {SearchBar, VideoList, VideoDetail } from './components/index'; NOTE: only for index file we dont need to mention we can use as below\n\nimport { SearchBar, VideoList, VideoDetail } from './components';\nimport youtube from './api/youtube'; //import SearchBar from './components/SearchBar';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      selectedVideo: null\n    };\n\n    this.handleSubmit = async searchTerm => {\n      //As we are fetch data from youtube api so funtion should be async\n      //perameters of get() methods are used for query with base URl\n      const response = await youtube.get('search', {\n        //This object is used to get append the Query on our base url:baseURL:'https://www.googleapis.com/youtube/v3',\n        //This base url is in the api/youtube.js   \n        params: {\n          part: 'snippet',\n          maxResults: 5,\n          key: 'AIzaSyC_1b8Orre72ocCWeoq_8j18FeFgozCNBY',\n          q: searchTerm // This is the query ( searched data )\n\n        }\n      }); //It is axios() method \n      //console.log(response.data.items);\n      //Below we set the state variables with the fetch video data and pass it to the Video Components\n      //From the selected Item we pic the first video of whole search\n\n      this.setState({\n        videos: response.data.items,\n        selectedVideo: response.data.items[0]\n      });\n    };\n\n    this.onVideoSelect = video => {\n      this.setState({\n        selectedVideo: video\n      });\n    };\n  }\n\n  render() {\n    //De structure the state variables and use it to pass to other components(like VideoDetail, VideoList) tag           \n    const {\n      selectedVideo,\n      videos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      justify: \"center\",\n      container: true,\n      spacing: 10,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 10,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              paddingBottom: \"0px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(SearchBar, {\n              onFormSubmit: this.handleSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            style: {\n              paddingRight: \"0px\",\n              maxHeight: '550px'\n            },\n            children: /*#__PURE__*/_jsxDEV(VideoDetail, {\n              video: selectedVideo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            style: {\n              maxHeight: '550px',\n              overflowX: 'auto',\n              marginTop: '40px',\n              paddingTop: \"0px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(VideoList, {\n              videos: videos,\n              onSelectVideo: this.onVideoSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/adash/Desktop/Asp_Practice/NodeJS_Practice/ReactPractice/Basic_YouTube_Clone/youtube-clone/src/App.js"],"names":["React","Grid","SearchBar","VideoList","VideoDetail","youtube","App","Component","state","videos","selectedVideo","handleSubmit","searchTerm","response","get","params","part","maxResults","key","q","setState","data","items","onVideoSelect","video","render","paddingBottom","paddingRight","maxHeight","overflowX","marginTop","paddingTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Grid} from '@material-ui/core';\r\n//  import {SearchBar, VideoList, VideoDetail } from './components/index'; NOTE: only for index file we dont need to mention we can use as below\r\nimport {SearchBar, VideoList, VideoDetail } from './components';\r\n\r\nimport youtube from './api/youtube';\r\n //import SearchBar from './components/SearchBar';\r\n\r\nclass App extends React.Component{\r\n    //The following is the state variable \r\n    state = {\r\n        videos: [],\r\n        selectedVideo: null,\r\n    }\r\n\r\n    //This event is used to populate the state variables on search using youTube Api\r\n    handleSubmit = async (searchTerm) =>{ //As we are fetch data from youtube api so funtion should be async\r\n        //perameters of get() methods are used for query with base URl\r\n        const response = await youtube.get('search',{\r\n            //This object is used to get append the Query on our base url:baseURL:'https://www.googleapis.com/youtube/v3',\r\n             //This base url is in the api/youtube.js   \r\n            params: {    \r\n                part:'snippet', \r\n                maxResults: 5, \r\n                key: 'AIzaSyC_1b8Orre72ocCWeoq_8j18FeFgozCNBY', \r\n                q: searchTerm, // This is the query ( searched data )\r\n            }\r\n        }); //It is axios() method \r\n        \r\n        //console.log(response.data.items);\r\n        //Below we set the state variables with the fetch video data and pass it to the Video Components\r\n        //From the selected Item we pic the first video of whole search\r\n        this.setState({videos:response.data.items, selectedVideo: response.data.items[0]});        \r\n    }\r\n\r\n    //This methos is used when we click on video from the video list of Right hand side\r\n    onVideoSelect = (video) => {\r\n        this.setState({selectedVideo: video})\r\n    }\r\n    render(){\r\n        //De structure the state variables and use it to pass to other components(like VideoDetail, VideoList) tag           \r\n        const {selectedVideo, videos} = this.state; \r\n        return(\r\n            <Grid justify=\"center\" container spacing={10}>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={10}>\r\n                        <Grid item xs={12} style={{paddingBottom: \"0px\"}} >\r\n                        {/* This section is for Search Bar */}\r\n                        <SearchBar onFormSubmit={this.handleSubmit}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={8} style={{paddingRight: \"0px\", maxHeight: '550px'}}>\r\n                        {/* This section is for Main running video Details  */}\r\n                        <VideoDetail video={selectedVideo}/>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={4} style={{maxHeight: '550px', overflowX:'auto', marginTop:'40px', paddingTop: \"0px\"}}>\r\n                        {/* This section is list of the videos right side */}\r\n                        <VideoList videos={videos} onSelectVideo={this.onVideoSelect}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}